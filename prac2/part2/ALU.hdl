CHIP ALU {
    IN  
        x[16], y[16],
        zx, nx, zy, ny, f, no;

    OUT 
        out[16],
        zr,
        ng;

    PARTS:
    Mux16(a=x, b=false, sel=zx, out=zxOut);
    Not16(in=zxOut, out=notX);
    Mux16(a=zxOut, b=notX, sel=nx, out=xOut);
    Mux16(a=y, b=false, sel=zy, out=zyOut);
    Not16(in=zyOut, out=notY);
    Mux16(a=zyOut, b=notY, sel=ny, out=yOut);
    And16(a=xOut, b=yOut, out=andOut);
    Add16(a=xOut, b=yOut, out=addOut);
    Mux16(a=andOut, b=addOut, sel=f, out=fOut);
    Not16(in=fOut, out=notFOut);
    Mux16(a=fOut, b=notFOut, sel=no,out[0..7]=outLSB, out[8..14]=outMSB, out[15]=outMSBbit);
    Mux16(a[0..7]=outLSB, a[8..14]=outMSB, a[15]=outMSBbit,b=false, sel=false, out=out);
    Or8Way(in=outLSB, out=orLow);
    Or8Way(in[0..6]=outMSB, in[7]=outMSBbit, out=orHigh);
    Or(a=orLow, b=orHigh, out=nonZero);
    Not(in=nonZero, out=zr);
    Or(a=outMSBbit, b=false, out=ng);
}
